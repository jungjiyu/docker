
도커 기초 지식
	- 도커의 구성 요소, 작동방식
	- 컨테이터로 실행하는데 필요한 내용 학습
	- 관련 명령어
	- 도커 네트워크, 스토리지

------------------------------------------------------------------------------------------

(일반적인) 이미지 : 물리적인 광매체(cd, dvd 등)를 압축한 파일. 
	: 광매체에 이미지라는 표현을 많이 쓰다보니 이미지 파일이라는 이름이 붙여진것
	: 다운로드/저장/백업 용으로 쓰인다.
	: 굳이 광매체를 압축해서 이미지로 만든 건 일일이 CD 같은거 들고다니기 귀찮으니까.
	: https://blog.naver.com/taeho930/220488967313 



데몬 Daemon : 백그라운드 프로세스. 밑에서 돌아가는.
	: 도커 데몬 >> 도커 관련 작업을 하는 백그라운드 프로세스



도커 이미지 image : 컨테이너 형태로 소프트웨어를 배포하기 위해 필요한 모든 요소를 실행할 수 있는 포맷으로 컴파일 및 빌드한 패키지.
	: 독립적이라 의존성 고려 필요 없음
	: 용량 비교적 작음
	: 읽기 전용이다. (수정 불가)
		: 특정 시점의 도커 컨테이너ㄹ의 상태를 담은 "스냅샷"이라고 볼 수 있다.
			 : 특정 시점의 상태를 사진 찍어둔 것처럼 그대로 저장해둔 것이니까. 
		: 이미지 자체는 읽기 전용이기에 실행이 불가하다.
		: 항상 같은 상태로 테스트 가능하게 해준다
			: 이미지를 실행한다는건 아님
	: 여러 개의 레이어로 구성되어있다. 
	: 도커 레지스트리에 저장되어 관리된다.
******: 구글링으로 좀 더 찾아보기 


도커 컨테이너 container : 도커 이미지를 실행할 수 있는 인스턴스 instance .
	: 도커 이미지로부터 생성된다. 
	: 도커 컨테이너에게 실행/중지/재실행/삭제 등의 명령을 내릴 수 있다



도커의 구성요소 
    : 도커 클라이언트 <--> 도커 호스트 <--> 도커 레지스트리
	(1) 도커 클라이언트 Docker Client : 도커에 명령을 내릴 수 있는 CLI 도구.

	(2) 도커 호스트 Docker host : 도커가 설치된 (물리적인/가상의)서버.
		: 도커 데몬 Docker Daemon >> 도커와 관련된 리소스를 관리하는 백그라운드 프로세스

	(3) 도커 레지스트리 Docker Registry : 도커 이미지를 사용자들끼리 공유할 수 있는 플랫폼.
		: 레지스트리 종류 
			1. 공개 public : 벤더에서 구축한 레지스트리  
				: Docker 의 공식 레지스트리인 Docker hub 가 가장 유명하다
					: Docker Hub >> 다운 원하는 이미지를 검색 후 클릭하면, 해당 이미지에 대한 상세 정보와 다운로드 받을 수 있는 명령어를 확인 가능 

			2. 개인 private : 개인이 (팀원과의 공유등을 목적으로) 직접 구축한 레지스트리.


도커의 작동 방식
	1. 도커 클라이언트에서 (이미지를 다운받는) 명령어를 입력 
	2. 도커 호스트의 데몬이 명령을 받음 
		case 1, 도커 호스트에 해당 이미지가 존재하지 않으면, "도커레지스트리"에서 해당 이미지를 다운로드 받음  
		case 2. 도커 호스트에 해당 이미지가 존재한다면 ..? 




????????????
도커 이미지:  런타임 환경을 위한 일종의 템플릿. 애플리케이션을 실행하는데 필요한 환경에 대한 파일. 
	: 애플리케이션을 포장 및 전송하기 위한 용도.
	: 읽기 전용이다 (수정 불가)
		; 읽기만 할 수 있다는 점에서 스냅샷이라고도 불린다.
	******: 특정 시점의 애플리케이션과 가상환경을 나타낸다. 일관적이다
			: 개발자가 균일한 조건에서 애플리케이션을 테스트할 수 있게 해준다
 	: 템플릿일 뿐이라, 시작하거나 실행할 순 없다.
	: 하나의 "이미지 베이스" 에서 "도커 이미지"를 무제한으로 생성할 수 있다.
		: 도커 이미지는 여러 개의 레이어로 구성될 수 있다
		: 각도커 이미지는 이전 레이어에서 비롯된다.
	: 이미지 계층은 
	: https://sunrise-min.tistory.com/entry/Docker-Container%EC%99%80-Image%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80

컨테이너 : 실행중인 이미지.
	: 컨테이너 생성 시 "이미지 레이어" 위에 "쓰기 가능한 레이어"가  추가된다.
		: 즉 , 컨테이너는 이미지와 다르게 수정이 가능하다 
		: 
	: 컨테이너 실행시, 기본적으로 컨테이너 내부에 도커이미지의 읽기-쓰기 복사본을 만든다.

????????????????
